name: Build and Push
on:
    push:
        branches:
            - 'release/v[0-9]+.[0-9]+'
jobs:
    SCAN:
      runs-on: ubuntu-latest
      if: |
        !startsWith(github.event.head_commit.message, '#NORUN')
      steps:
          - uses: actions/checkout@v3
            with: 
              ref: ${{ github.ref }} 

          - name: Run trivy scanner
            uses: aquasecurity/trivy-action@master
            with:
              format: 'table'
              scan-type: 'fs'
              severity: 'HIGH'
              exit-code: '1'
              ignore-unfixed: true
              output: 'trivy-results.txt'
            
          - name: Pass output
            if: failure()
            uses: actions/upload-artifact@v2
            with:
              name: trivy-report.txt
              path: trivy-report.txt
          
    FailureSEND:
      needs: SCAN
      runs-on: ubuntu-latest
      if: failure()
      steps:
          - name: Slack Notification
            uses: rtCamp/action-slack-notify@v2
            env:
                SLACK_CHANNEL: workshopsubtest # need to change
                SLACK_COLOR: failure
                
                SLACK_TITLE: Scan failed - Zheng Jie Cheng
                SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'
                SLACK_WEBHOOK: ${{ secrets.CICDTEST_BYMYSELF }} #need change


          - name: Download artifact
            uses: actions/download-artifact@v2
            with:
              name: trivy-report.txt
              path: .

          - name: Post Files to slack
            uses: MeilCli/slack-upload-file@v4
            with:
              slack_token: ${{ secrets.CICDTEST_BYMYSELF_TOKEN }} #need change
              channel_id: 'C071M1LB3DM' #need change
              file_path: 'trivy-results.txt'
              file_type: 'text'
              initial_comment: 'Scan report by Zheng Jie Cheng'
          
          - name: Set Failure
            run: exit 1
        
  
    SuccessSend: 
      needs: SCAN
      runs-on: ubuntu-latest
      if: success()
      steps:
          - name: Set up QEMU
            uses: docker/setup-qemu-action@v3
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKERHUB_USERNAME }}
              password: ${{ secrets.DOCKERHUB_TOKEN }}
          - name: Build and push
            uses: docker/build-push-action@v5
            with:
              push: true
              tags: howdybunny/go-fortune:${{ github.sha }}

          
          - name: Install Cosign
            uses: sigstore/cosign-installer@v3.5.0
          
          
          - name: Sign image with a key
            run: |
              images=""
              for tag in ${TAGS}; do
                images+="${tag}"
              done
              cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${images}
              cosign verify --key cosign.pub ${images}
              
            env:
              COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
              COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
              TAGS: 'howdybunny/go-fortune:${{ github.sha }}'
              
              
              
          - name: Slack Notification
            uses: rtCamp/action-slack-notify@v2
            env:
              SLACK_CHANNEL: workshopsubtest #need change
              SLACK_COLOR: ${{ job.status }}
              SLACK_TITLE: Image build and signed
              ENABLE_ESCAPES: true
              SLACK_MESSAGE: '*Name:* Zheng Jie Cheng\n*Metriculation:* A0290838R\n*Email:* e1327869@u.nus.edu\n*Git:* https://github.com/${{ github.repository }}\n*Image:* https://hub.docker.com/repository/docker/howdybunny/go-fortune'
              SLACK_WEBHOOK: ${{ secrets.CICDTEST_BYMYSELF }} #need change


            
                


            
    